
DROP DATABASE IF EXISTS Testing_System_Assignment_03;
CREATE DATABASE Testing_System_Assignment_03;
USE Testing_System_Assignment_03;
CREATE TABLE Department (
Department_ID 		TINYINT auto_increment primary key,
Department_Name 	VARCHAR(50) UNIQUE KEY

);
-- DROP TABLE IF EXISTS Position;
CREATE TABLE Position ( 
Position_ID 		TINYINT auto_increment primary key,          
Position_Name 		VARCHAR (50) 
);

-- DROP TABLE IF EXISTS Account; 
CREATE TABLE `Account`(
Account_ID 			TINYINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
Email 				VARCHAR (50) NOT NULL,
Username 			VARCHAR (50) NOT NULL,
Fullname 			VARCHAR (50) NOT NULL,
Department_ID 		TINYINT ,
Position_ID 		TINYINT ,
CreateDate			DATETIME ,
FOREIGN KEY (Department_ID) REFERENCES Department(Department_ID),
FOREIGN KEY (Position_ID) REFERENCES Position (Position_ID)

);

CREATE TABLE `Group`(
Group_ID 			TINYINT UNSIGNED auto_increment primary key,
Group_Name 			VARCHAR (50) NOT NULL,
Creator_ID 			TINYINT UNSIGNED,
CreateDate			DATETIME DEFAULT NOW(),
FOREIGN KEY (Creator_ID) REFERENCES `Account`(Account_ID)

);

CREATE TABLE GroupAccount (
Group_ID 			TINYINT UNSIGNED NOT NULL,
Account_ID 			TINYINT UNSIGNED NOT NULL,
JoinDate 			DATETIME DEFAULT NOW(),
FOREIGN KEY (Group_ID) REFERENCES `Group` (Group_ID),
FOREIGN KEY (Account_ID ) REFERENCES `Account`(Account_ID)

);

CREATE TABLE TypeQuestion (
Type_ID 			TINYINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
TypeName 			VARCHAR (50) NOT NULL UNIQUE KEY
);

CREATE TABLE CategoryQuestion (
Category_ID 		TINYINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
CategoryName 		VARCHAR (50) NOT NULL UNIQUE KEY
);

CREATE TABLE Question (

Question_ID 		TINYINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
Content 			NVARCHAR (300) NOT NULL,
Category_ID 		TINYINT UNSIGNED NOT NULL,
Type_ID 			TINYINT UNSIGNED NOT NULL,
Creator_ID 			TINYINT UNSIGNED NOT NULL,
CreateDate 			DATETIME DEFAULT NOW(),
FOREIGN KEY(Category_ID) REFERENCES CategoryQuestion(Category_ID),
FOREIGN KEY(Type_ID) REFERENCES TypeQuestion(Type_ID),
FOREIGN KEY(Creator_ID) REFERENCES `Account`(Account_ID)

);

CREATE TABLE Answer (
Answer_ID 			TINYINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
Content 			NVARCHAR (300) NOT NULL,
QuestionID 			TINYINT UNSIGNED NOT NULL,
isCorrect 			BIT DEFAULT 1

);

CREATE TABLE Exam (
Exam_ID 			TINYINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
Code				CHAR(10) NOT NULL,
Title 				VARCHAR (50) NOT NULL,
Category_ID			TINYINT UNSIGNED NOT NULL,
Duration			INT,
Creator_ID 			TINYINT UNSIGNED NOT NULL,
CreateDate			DATETIME DEFAULT NOW(),
FOREIGN KEY(Category_ID) REFERENCES CategoryQuestion(Category_ID),
FOREIGN KEY(Creator_ID) REFERENCES `Account`(Account_ID)

);

CREATE TABLE ExamQuestion (
Exam_ID 			TINYINT UNSIGNED NOT NULL,
Question_ID 		TINYINT UNSIGNED NOT NULL,
FOREIGN KEY(Question_ID) REFERENCES Question(Question_ID)
);



